version: '2'
volumes:
  mongo-data:
    external: false
  redis-data:
    external: false

services:
  nginx:
    restart: always
    image: bootlegger/nginx
    build:
      context: ../..
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      # - "../../certs:/etc/nginx/certs:ro"
      # - "../../conf:/etc/nginx/conf.d"
      - "../server.conf:/etc/nginx/conf.d/default.conf:ro"
      - "../bootlegger.dev.conf:/etc/nginx/vhost.d/default:ro"
      - "/usr/share/nginx/html"
      - "./upload:/usr/src/app/upload"
    volumes_from:
      - web


  # nginx-gen:
  #   image: jwilder/docker-gen
  #   restart: always
  #   volumes:
  #     - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #     # - "../nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
  #   volumes_from:
  #     - nginx
  #   command: '-notify-sighup nginx -watch -wait 5s:30s /etc/nginx/templates/nginx.tmpl /etc/nginx/conf.d/default.conf'

  redis:
    image: redis:alpine
    command: redis-server

  mongo:
    image: mvertes/alpine-mongo
    volumes:
      - mongo-data:/data/db
    ports:
      - '27017:27017'

  beanstalk:
    image: kusmierz/beanstalkd

  # worker:
  #   image: bootlegger/transcode-server:latest
  #   restart: always
  #   volumes_from:
  #     - web
  #   volumes:
  #     - "./upload:/usr/src/app/upload"
  #     - "/.tmp/"

  web:
    restart: always
    build: ../..
    image: bootlegger/server-app:ourstory
    depends_on: 
      - redis
      - mongo
      - beanstalk
    command: nodemon --watch api app.js # -- --verbose
    expose:
      - 1337
    volumes:
      - ../../config:/usr/src/app/config
      - "./upload:/usr/src/app/upload"
      - "../../api:/usr/src/app/api"
      - "../../assets:/usr/src/app/assets"
      - "../../views:/usr/src/app/views"
      - "../../ssl:/usr/src/app/ssl"
      - "../../.sailsrc:/usr/src/app/.sailsrc"
    environment:
      - MYIP=localhost
      - VIRTUAL_HOST=localhost
      - VIRTUAL_PORT=1337
      # - NODE_ENV=production