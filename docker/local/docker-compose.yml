version: '2'
volumes:
  mongo-data:
    external: false
  redis-data:
    external: false
  upload-data:
    external: false

services:
  nginx:
    image: nginx
    # container_name: osnginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - "../../certs:/etc/nginx/certs:ro"
      - "../../conf:/etc/nginx/conf.d"
      - "../bootlegger.dev.conf:/etc/nginx/vhost.d/default"
      - "/usr/share/nginx/html"
    volumes_from:
      - web

  # nginx-gen:
  #   image: jwilder/docker-gen
  #   restart: always
  #   volumes:
  #     - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #     - "../nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
  #   volumes_from:
  #     - nginx
  #   command: '-notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf'

  redis:
    image: redis:alpine
    command: redis-server --appendonly yes

  mongo:
    image: mongo:3.2
    ports:
      - '27017:27017'

  beanstalk:
    image: kusmierz/beanstalkd

  # worker:
  #   image: bootlegger/transcode-server:latest
  #   restart: always
  #   volumes_from:
  #     - web
  #   volumes:
  #     - ../../../transcode-server/config/local.js:/usr/src/app/config/local.js
  #     - "../../upload:/usr/src/app/upload"
  #     - "/.tmp/"
    
  web:
    restart: always
    # image: openlab.ncl.ac.uk:4567/bootlegging/server-app:latest
    image: bootlegger/server-app:ourstory
    build: ../..
    command: nodemon -L --watch api app.js
    depends_on: 
      - redis
      - mongo
      - beanstalk
    expose:
      - 1337
    volumes:
      - ../../ssl:/usr/src/app/ssl:ro
      - "../../upload:/usr/src/app/upload"
      # for dev
      - ../../api:/usr/src/app/api
      - ../../assets:/usr/src/app/assets
      - ../../config:/usr/src/app/config
      - ../../views:/usr/src/app/views
      - "/usr/src/app/.tmp"
    environment:
      - VIRTUAL_HOST=localhost
      - VIRTUAL_PORT=1337
      - MYIP=localhost
      # - NODE_ENV=production