[{"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/index.tsx":"1","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/Views.ts":"2","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkEditor.tsx":"3","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Header/HeaderStyles.ts":"4","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/TranscriberStyles.ts":"5","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/hooks/useTranscriberState.ts":"6","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/StepInfo.tsx":"7","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ConfirmIntentModal/ConfirmIntentModal.tsx":"8","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/CentralModal/CentralModal.tsx":"9","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/OnboardingModal/OnboardingModalStyles.ts":"10","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleInputForm/SimpleInputForm.tsx":"11","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Header/Header.tsx":"12","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/UserProvider/UserProvider.tsx":"13","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Reviewer/Reviewer.tsx":"14","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ContributersModal/ContributersModal.tsx":"15","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useConfirmBeforeAction.ts":"16","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/localStorageKeys.ts":"17","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useSlideshow.ts":"18","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/hooks/useAutoPauseOnType.ts":"19","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkCardContextMenu.tsx":"20","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleCard/ChunkCard.tsx":"21","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/VideoPlayer.tsx":"22","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/EditChunkModal/EditChunkModal.tsx":"23","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/LoadingModal/LoadingModal.tsx":"24","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/TranscriptionsModal/TranscriptionsModal.tsx":"25","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/OnboardingModal/OnboardingModal.tsx":"26","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/NameModal/NameModal.tsx":"27","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaMenu/IndabaMenu.tsx":"28","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/adjacentMap.ts":"29","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/oneSatisfies.ts":"30","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useDefaultState.ts":"31","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkCropper.tsx":"32","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/hooks/useSteps.ts":"33","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/FlatPaper/FlatPaper.tsx":"34","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerProps.ts":"35","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaSlider/IndabaSlider.tsx":"36","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/hooks/useOurstoryApi.ts":"37","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/reportWebVitals.ts":"38","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/App.tsx":"39","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/getId.ts":"40","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/chunkManipulation/chunkManipulation.ts":"41","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useToggle.ts":"42","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useLocalStorage.ts":"43","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Dashboard/Dashboard.tsx":"44","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/ChunksContext/chunksContext.tsx":"45","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/Transcriber.tsx":"46","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/getApiKey.ts":"47","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkEditorStyles.ts":"48","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/ChunksContext/chunksActions.ts":"49","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Dashboard/DashboardStyles.ts":"50","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerController.ts":"51","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/VideoThumbnail.tsx":"52","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleCard/SimpleCard.tsx":"53","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaButton/IndabaButton.tsx":"54","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ScrollToOnMount/ScrollToOnMount.tsx":"55","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/BackButton/BackButton.tsx":"56","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleCard/EditTranscriptionCard.tsx":"57","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaLink/IndabaLink.tsx":"58","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Slideshow/Slideshow.tsx":"59","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SkipForwardBackButtons/SkipForwardBackButtons.tsx":"60","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/WarningMessage/WarningMessage.tsx":"61","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/StepInfoStyles.ts":"62","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/VideoPlayerStyles.ts":"63","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/NameModal/NameModalStyles.ts":"64","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Slideshow/SlideshowStyles.ts":"65","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/ProgressBarLabel.tsx":"66","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/LinearProgressWithLabel/LinearProgressWithLabel.tsx":"67"},{"size":515,"mtime":1607475143920,"results":"68","hashOfConfig":"69"},{"size":91,"mtime":1608337617033,"results":"70","hashOfConfig":"69"},{"size":12328,"mtime":1613454157528,"results":"71","hashOfConfig":"69"},{"size":872,"mtime":1610578086063,"results":"72","hashOfConfig":"69"},{"size":729,"mtime":1613083378573,"results":"73","hashOfConfig":"69"},{"size":6497,"mtime":1613088548090,"results":"74","hashOfConfig":"69"},{"size":1334,"mtime":1610601873927,"results":"75","hashOfConfig":"69"},{"size":1642,"mtime":1611710451004,"results":"76","hashOfConfig":"69"},{"size":1776,"mtime":1612834241831,"results":"77","hashOfConfig":"69"},{"size":517,"mtime":1613020267411,"results":"78","hashOfConfig":"69"},{"size":1166,"mtime":1611200894648,"results":"79","hashOfConfig":"69"},{"size":2187,"mtime":1613011494642,"results":"80","hashOfConfig":"69"},{"size":934,"mtime":1613446346353,"results":"81","hashOfConfig":"69"},{"size":11689,"mtime":1613452906482,"results":"82","hashOfConfig":"69"},{"size":4465,"mtime":1613452891921,"results":"83","hashOfConfig":"69"},{"size":2118,"mtime":1611705728391,"results":"84","hashOfConfig":"69"},{"size":33,"mtime":1608102697344,"results":"85","hashOfConfig":"69"},{"size":995,"mtime":1613089675005,"results":"86","hashOfConfig":"69"},{"size":1086,"mtime":1613017174988,"results":"87","hashOfConfig":"69"},{"size":1234,"mtime":1613013190565,"results":"88","hashOfConfig":"69"},{"size":1514,"mtime":1613452897617,"results":"89","hashOfConfig":"69"},{"size":6710,"mtime":1613452900870,"results":"90","hashOfConfig":"69"},{"size":1766,"mtime":1613013144811,"results":"91","hashOfConfig":"69"},{"size":693,"mtime":1612825407397,"results":"92","hashOfConfig":"69"},{"size":1195,"mtime":1613452899202,"results":"93","hashOfConfig":"69"},{"size":2266,"mtime":1613020269344,"results":"94","hashOfConfig":"69"},{"size":902,"mtime":1612826433705,"results":"95","hashOfConfig":"69"},{"size":567,"mtime":1613015577328,"results":"96","hashOfConfig":"69"},{"size":462,"mtime":1609980016612,"results":"97","hashOfConfig":"69"},{"size":378,"mtime":1608619025331,"results":"98","hashOfConfig":"69"},{"size":351,"mtime":1612394267533,"results":"99","hashOfConfig":"69"},{"size":3466,"mtime":1612845988962,"results":"100","hashOfConfig":"69"},{"size":1188,"mtime":1610601896159,"results":"101","hashOfConfig":"69"},{"size":388,"mtime":1610584474397,"results":"102","hashOfConfig":"69"},{"size":4751,"mtime":1613430593490,"results":"103","hashOfConfig":"69"},{"size":1107,"mtime":1612228437935,"results":"104","hashOfConfig":"69"},{"size":2839,"mtime":1613455512065,"results":"105","hashOfConfig":"69"},{"size":425,"mtime":1607421889321,"results":"106","hashOfConfig":"69"},{"size":5512,"mtime":1613452895478,"results":"107","hashOfConfig":"69"},{"size":273,"mtime":1613455496928,"results":"108","hashOfConfig":"69"},{"size":6940,"mtime":1613452650384,"results":"109","hashOfConfig":"69"},{"size":347,"mtime":1608786967642,"results":"110","hashOfConfig":"69"},{"size":1370,"mtime":1612915859778,"results":"111","hashOfConfig":"69"},{"size":2239,"mtime":1613085976977,"results":"112","hashOfConfig":"69"},{"size":850,"mtime":1613013135455,"results":"113","hashOfConfig":"69"},{"size":9617,"mtime":1613452893671,"results":"114","hashOfConfig":"69"},{"size":228,"mtime":1613455502630,"results":"115","hashOfConfig":"69"},{"size":694,"mtime":1613020677430,"results":"116","hashOfConfig":"69"},{"size":12688,"mtime":1613454063965,"results":"117","hashOfConfig":"69"},{"size":243,"mtime":1610495448868,"results":"118","hashOfConfig":"69"},{"size":3197,"mtime":1612845391656,"results":"119","hashOfConfig":"69"},{"size":1200,"mtime":1613009783375,"results":"120","hashOfConfig":"69"},{"size":882,"mtime":1613014185120,"results":"121","hashOfConfig":"69"},{"size":977,"mtime":1612404177529,"results":"122","hashOfConfig":"69"},{"size":408,"mtime":1611794380284,"results":"123","hashOfConfig":"69"},{"size":624,"mtime":1613443016774,"results":"124","hashOfConfig":"69"},{"size":1015,"mtime":1613014330363,"results":"125","hashOfConfig":"69"},{"size":419,"mtime":1611096888228,"results":"126","hashOfConfig":"69"},{"size":2037,"mtime":1613089298245,"results":"127","hashOfConfig":"69"},{"size":925,"mtime":1611805328030,"results":"128","hashOfConfig":"69"},{"size":479,"mtime":1611707663299,"results":"129","hashOfConfig":"69"},{"size":530,"mtime":1608099219859,"results":"130","hashOfConfig":"69"},{"size":1153,"mtime":1612404894898,"results":"131","hashOfConfig":"69"},{"size":432,"mtime":1610406269709,"results":"132","hashOfConfig":"69"},{"size":316,"mtime":1612405729482,"results":"133","hashOfConfig":"69"},{"size":294,"mtime":1610596943513,"results":"134","hashOfConfig":"69"},{"size":677,"mtime":1608074628548,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"uzuwhv",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/index.tsx",[],["276","277"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/Views.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkEditor.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Header/HeaderStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/TranscriberStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/hooks/useTranscriberState.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/StepInfo.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ConfirmIntentModal/ConfirmIntentModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/CentralModal/CentralModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/OnboardingModal/OnboardingModalStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleInputForm/SimpleInputForm.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Header/Header.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/UserProvider/UserProvider.tsx",["278"],"import { createContext, useEffect, useMemo } from \"react\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport { name_key } from \"../../utils/localStorageKeys\";\nimport { StateSetter } from \"../../utils/types\";\n\ntype UserContextType = {\n  userName: string | undefined;\n  setName: StateSetter<string | undefined>;\n  clearName: () => void;\n};\n\nconst initialValue: UserContextType = {\n  userName: undefined,\n  setName: () => null,\n  clearName: () => null,\n};\n\nexport const UserContext = createContext<UserContextType>(initialValue);\n\nconst UserProvider: React.FC<{}> = ({ children }) => {\n  const [name, setName, clearName] = useLocalStorage(name_key);\n\n  const value = useMemo(\n    () => ({\n      userName: name,\n      setName: setName,\n      clearName: clearName,\n    }),\n    [name, setName, clearName]\n  );\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Reviewer/Reviewer.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ContributersModal/ContributersModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useConfirmBeforeAction.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/localStorageKeys.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useSlideshow.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/hooks/useAutoPauseOnType.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkCardContextMenu.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleCard/ChunkCard.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/VideoPlayer.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/EditChunkModal/EditChunkModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/LoadingModal/LoadingModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/TranscriptionsModal/TranscriptionsModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/OnboardingModal/OnboardingModal.tsx",["279"],"import {\n  Stepper,\n  Step,\n  StepLabel,\n  Container,\n  Divider,\n  Typography,\n  ButtonBase,\n} from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport React, { ReactElement, useCallback } from \"react\";\nimport useSlideshow from \"../../hooks/useSlideshow\";\nimport CentralModal from \"../CentralModal/CentralModal\";\nimport useStyles from \"./OnboardingModalStyles\";\n\ntype OnboardingModalProps = {\n  show: boolean;\n  dismiss: () => void;\n  title: ReactElement;\n  steps: string[];\n  startButtonContent: ReactElement;\n};\n\nconst OnboardingModal: React.FC<OnboardingModalProps> = ({\n  show,\n  dismiss,\n  title,\n  steps,\n  startButtonContent,\n}) => {\n  const { page, goTo, reset } = useSlideshow(steps);\n\n  const dismissHandler = useCallback(() => {\n    reset();\n    dismiss();\n  }, []);\n\n  const nextPageHandler = useCallback(() => {\n    page === steps.length - 1 ? dismissHandler() : goTo(\"next\");\n  }, [page, goTo, dismissHandler, steps.length]);\n\n  const prevPageHandler = useCallback(() => {\n    goTo(\"prev\");\n  }, [goTo]);\n\n  const classes = useStyles();\n\n  return (\n    <CentralModal header={title} open={show} exit={dismissHandler}>\n      <div className={classes.contentContainer}>\n        <Stepper activeStep={page}>\n          {steps.map((_, idx) => (\n            <Step key={idx}>\n              <StepLabel />\n            </Step>\n          ))}\n        </Stepper>\n        <Container className={classes.instructionsContainer}>\n          <Divider className={classes.divider} />\n          <div className={classes.centerVertically}>\n            <Typography variant=\"h5\">{steps[page]}</Typography>\n          </div>\n        </Container>\n        <Container className={classes.buttonsContainer}>\n          {page === 0 ? (\n            <div />\n          ) : (\n            <ButtonBase onClick={prevPageHandler}>\n              <ChevronLeft /> Previous\n            </ButtonBase>\n          )}\n          <ButtonBase onClick={nextPageHandler}>\n            {page === steps.length - 1 ? (\n              startButtonContent\n            ) : (\n              <>\n                Next <ChevronRight />\n              </>\n            )}\n          </ButtonBase>\n        </Container>\n      </div>\n    </CentralModal>\n  );\n};\n\nexport default OnboardingModal;\n","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/NameModal/NameModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaMenu/IndabaMenu.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/adjacentMap.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/oneSatisfies.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useDefaultState.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkCropper.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/hooks/useSteps.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/FlatPaper/FlatPaper.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerProps.ts",["280"],"// External Dependencies\nimport { useState, useEffect, RefObject, useMemo, useCallback } from \"react\";\nimport ReactPlayer, { ReactPlayerProps } from \"react-player\";\nimport { useThrottleCallback } from \"@react-hook/throttle\";\n\n// Internal Dependencies\nimport { StateSetter } from \"../../../utils/types\";\nimport { ProgressState } from \"../VideoPlayer\";\n\nconst useProgressBarControls = (\n  initialValue: number,\n  playerUpdater: (newValue: number) => void\n): {\n  value: number;\n  setWithoutVideoUpdate: (newValue: number) => void;\n  setWithVideoUpdate: (newValue: number) => void;\n} => {\n  const [state, setState] = useState(initialValue);\n\n  const setWithVideoUpdate = useCallback((newValue: number) => {\n      setState(newValue);\n      playerUpdater(newValue);\n    }, [setState, playerUpdater]);\n\n  return {\n    value: state,\n    setWithoutVideoUpdate: setState,\n    setWithVideoUpdate\n  };\n};\n\n/**\n * This hook maintains the logic for the VideoPlayer component.\n *\n * It handles the logic for use intractions with the controls of the video,\n * and the automatic fading for when the video isn't interacted with\n *\n * @param playerRef - a reference to the player that this hook controls\n */\nconst useVideoPlayerProps = (\n  progressState: ProgressState,\n  playStateIn: [play: boolean, setPlay: StateSetter<boolean>],\n  playerRef: RefObject<ReactPlayer>,\n  setDuration: (state: number) => void,\n  /** The beginning and end of the clip of the video to play, as a fraction\n   *  If, for example, start is 0 and end is 0.5, only play the first half of\n   *  the video\n   */\n  split: { start: number; end: number },\n  onProgressDrag?: () => void,\n  loop?: boolean\n): {\n  playerProps: ReactPlayerProps;\n  progressBarProps: any;\n  showControls: boolean;\n  isPlaying: boolean;\n  toggleIsPlaying: () => void;\n} => {\n  const [isPlaying, setIsPlaying] = playStateIn;\n\n  /* State for whether the video source has been loaded */\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  /* State for whether the user is scrolling through the video */\n  const [dragging, setDragging] = useState(false);\n\n  /* State for the progress through the video, as a fraction */\n  const { progress, setProgress, setProgressWithVideoUpdate } = progressState;\n\n  useEffect(() => {\n    if (isLoaded && playerRef.current) {\n      setDuration(playerRef.current.getDuration());\n    }\n  }, [setDuration, playerRef, isLoaded]);\n\n  /* These are the props that will be passed onto the ReactPlayer component */\n  const playerProps: ReactPlayerProps = useMemo(\n    () => ({\n      playing: !dragging && isPlaying,\n      progressInterval: 100,\n      onProgress: ({ played /*playedSeconds, loaded, loadedSeconds*/ }) =>\n        setProgress(played),\n      onReady: () => setIsLoaded(true),\n      onEnded: () => setIsPlaying(false),\n    }),\n    [dragging, isPlaying, setIsPlaying, setProgress]\n  );\n\n  const throttleUpdateVideo = useThrottleCallback(\n    (newVal: number) => setProgressWithVideoUpdate(newVal / 100),\n    10\n  );\n\n  const {\n    value: progressBarValue,\n    setWithVideoUpdate: onScrobble,\n    setWithoutVideoUpdate: updateProgressBar,\n  } = useProgressBarControls(progress * 100, throttleUpdateVideo);\n\n  useEffect(() => {\n    updateProgressBar(progress * 100);\n  }, [progress, updateProgressBar]);\n\n  /* These are the props that will be passed onto the Slider component (the slider component is the video progress bar) */\n  const progressBarProps = useMemo(\n    () => ({\n      value: progressBarValue,\n      min: split.start * 100,\n      max: split.end * 100,\n      step: 0.0001,\n      onChange: (_: any, newVal: number | number[]) => {\n        onProgressDrag && onProgressDrag();\n        setDragging(true);\n        onScrobble(newVal as number);\n      },\n      onChangeCommitted: (_: any, newVal: number | number[]) => {\n        setDragging(false);\n      },\n    }),\n    [progressBarValue, split, onProgressDrag, onScrobble, setProgressWithVideoUpdate]\n  );\n\n  useEffect(() => {\n    /** If the video is playing and it has reached the end, stop it from continuing */\n    if (progress > split.end + 0.0001) {\n      if (loop && !dragging) {\n        setProgressWithVideoUpdate(split.start);\n      } else {\n        setProgressWithVideoUpdate(split.end);\n        setIsPlaying(false);\n      }\n      /** If the video's progress is before the start of the split, set it to the start */\n    } else if (progress < split.start - 0.0001) {\n      setProgressWithVideoUpdate(split.start + 0.1);\n    }\n  }, [progress, isPlaying, setIsPlaying, split.end, split.start, loop, setProgressWithVideoUpdate, dragging]);\n\n  return {\n    playerProps,\n    progressBarProps,\n    showControls: true,\n    isPlaying,\n    toggleIsPlaying: () => setIsPlaying((s) => !s),\n  };\n};\n\nexport default useVideoPlayerProps;\n","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaSlider/IndabaSlider.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/hooks/useOurstoryApi.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/reportWebVitals.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/App.tsx",["281"],"// External Dependencies\nimport React, { useMemo, useState, useCallback, useEffect } from \"react\";\n\n/**\n * Consistent Done Buttons\n * Consistent Iconography/Typography\n * When editing transcription in review component, list other transcriptions\n * Fix bugs\n * Merge into main application\n */\n\n// Internal Dependencies\nimport ChunkEditor from \"../ChunkEditor/ChunkEditor\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Header from \"../Header/Header\";\nimport useSteps from \"./hooks/useSteps\";\nimport View from \"./Views\";\nimport { useStoryId } from \"../../utils/getId\";\nimport Transcriber from \"../Transcriber/Transcriber\";\nimport UserProvider from \"../UserProvider/UserProvider\";\nimport useOurstoryApi from \"./hooks/useOurstoryApi\";\nimport { Reviewer } from \"../Reviewer/Reviewer\";\nimport chunksContext from \"../../utils/ChunksContext/chunksContext\";\nimport {\n  countChunksWithTranscription,\n  countReviewedChunks,\n  getLastEndTimeSeconds,\n} from \"../../utils/chunkManipulation/chunkManipulation\";\nimport useToggle from \"../../hooks/useToggle\";\nimport ContributerListModal from \"../ContributersModal/ContributersModal\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nconst App: React.FC<{}> = () => {\n  const [view, setView] = useState<View>(View.Dashboard);\n  const { ChunksProvider } = chunksContext;\n\n  const story_id = useStoryId();\n\n  const {\n    storyTitle,\n    chunksState: [chunks, setChunks],\n  } = useOurstoryApi(story_id);\n\n  const chunkingProgress = useMemo(() => getLastEndTimeSeconds(chunks), [\n    chunks,\n  ]);\n  const transcriptionProgress = useMemo(\n    () =>\n      chunks.length ? countChunksWithTranscription(chunks) / chunks.length : 0,\n    [chunks]\n  );\n  const reviewProgress = useMemo(\n    () => (chunks.length ? countReviewedChunks(chunks) / chunks.length : 0),\n    [chunks]\n  );\n\n  const steps = useSteps(setView, [\n    { progress: chunkingProgress * 100, enabled: true },\n    {\n      progress: transcriptionProgress * 100,\n      enabled: chunkingProgress > 0,\n    },\n    {\n      progress: reviewProgress * 100,\n      enabled: transcriptionProgress > 0,\n    },\n  ]);\n\n  const [showContributers, toggleShowContributers] = useToggle(false);\n\n  const [\n    showChunkEditorOnboarding,\n    setShowChunkEditorOnboarding,\n  ] = useLocalStorage(\"showChunkEditorOnboardingModal\", \"true\");\n  const [\n    showTranscriberOnboarding,\n    setShowTranscriberOnboarding,\n  ] = useLocalStorage(\"showTranscriberOnboardingModal\", \"true\");\n\n  const [showReviewerOnboardring, setShowReviewerOnboarding] = useLocalStorage(\n    \"showReviewerOnboardingModal\",\n    \"true\"\n  );\n\n  const logOutAction = () => {\n    setShowChunkEditorOnboarding(\"true\");\n    setShowTranscriberOnboarding(\"true\");\n    setShowReviewerOnboarding(\"true\");\n  };\n\n  const exit = useCallback(() => setView(View.Dashboard), []);\n\n  const contextMenuItems = useMemo(\n    () =>\n      [\n        {\n          content: <div>Show Contributions</div>,\n          handler: toggleShowContributers,\n        }\n      ].concat(\n        view === View.Chunking\n          ? {\n              content: <div>View instructions</div>,\n              handler: (): void => {\n                setShowChunkEditorOnboarding(\"true\");\n              },\n            }\n          : view === View.Reviewing\n          ? {\n              content: <div>View instructions</div>,\n              handler: (): void => {\n                setShowReviewerOnboarding(\"true\");\n              },\n            }\n          : []\n      ),\n    [\n      view,\n      setShowChunkEditorOnboarding,\n      setShowReviewerOnboarding,\n      toggleShowContributers,\n    ]\n  );\n\n  return (\n    <ChunksProvider state={[chunks, setChunks]}>\n      <UserProvider>\n        <main>\n          <ContributerListModal\n            chunks={chunks}\n            show={showContributers}\n            exit={toggleShowContributers}\n          />\n          <Header\n            title={View[view]}\n            hidden={view === View.Transcribing}\n            contextMenuItems={contextMenuItems}\n          >\n            {view === View.Dashboard ? (\n              <Dashboard\n                steps={steps}\n                storyName={storyTitle ? storyTitle : \"Loading\"}\n                logOutAction={logOutAction}\n              />\n            ) : view === View.Chunking ? (\n              <ChunkEditor\n                story_id={story_id}\n                atExit={exit}\n                onboarding={{\n                  showOnboardingModal: showChunkEditorOnboarding === \"true\",\n                  dismissOnboardingModal: () =>\n                    setShowChunkEditorOnboarding(\"false\"),\n                }}\n              />\n            ) : view === View.Transcribing ? (\n              <Transcriber\n                story_id={story_id}\n                atExit={exit}\n                onboarding={{\n                  showOnboardingModal: showTranscriberOnboarding === \"true\",\n                  dismissOnboardingModal: () =>\n                    setShowTranscriberOnboarding(\"false\"),\n                }}\n              />\n            ) : view === View.Reviewing ? (\n              <Reviewer\n                atExit={exit}\n                story_id={story_id}\n                onboarding={{\n                  showOnboardingModal: showReviewerOnboardring === \"true\",\n                  dismissOnboardingModal: () =>\n                    setShowReviewerOnboarding(\"false\"),\n                }}\n              />\n            ) : null}\n          </Header>\n        </main>\n      </UserProvider>\n    </ChunksProvider>\n  );\n};\n\nexport default App;\n","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/getId.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/chunkManipulation/chunkManipulation.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useToggle.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/hooks/useLocalStorage.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Dashboard/Dashboard.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/ChunksContext/chunksContext.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Transcriber/Transcriber.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/getApiKey.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ChunkEditor/ChunkEditorStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/utils/ChunksContext/chunksActions.ts",["282"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Dashboard/DashboardStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerController.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/VideoThumbnail.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleCard/SimpleCard.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaButton/IndabaButton.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/ScrollToOnMount/ScrollToOnMount.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/BackButton/BackButton.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SimpleCard/EditTranscriptionCard.tsx",["283","284","285"],"import { TextField } from \"@material-ui/core\";\nimport React, { ReactNode } from \"react\";\nimport { Chunk, State } from \"../../utils/types\";\nimport ChunkCard from \"./ChunkCard\";\nimport SimpleCard from \"./SimpleCard\";\n\ntype EditTranscriptionCardProps = {\n  inputRef?: React.MutableRefObject<null>;\n  transcriptionIcon?: ReactNode,\n  transcriptionValue: string;\n  onChange: (newValue: string) => void;\n};\n\nconst EditTranscriptionCard: React.FC<EditTranscriptionCardProps> = ({\n  inputRef,\n  transcriptionValue,\n  transcriptionIcon,\n  onChange,\n}) => {\n\n  return (\n    <SimpleCard title={transcriptionIcon} cardStyle={{margin: \"16px 8px 0 8px\"}} >\n      <TextField\n        autoFocus\n        multiline\n        rows={7}\n        inputRef={inputRef}\n        style={{ width: \"100%\" }}\n        variant=\"outlined\"\n        label=\"Transcription\"\n        value={transcriptionValue}\n        onChange={(e) => {\n          onChange(e.target.value);\n        }}\n      />\n    </SimpleCard>\n  );\n};\n\nexport default EditTranscriptionCard;\n","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/IndabaLink/IndabaLink.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Slideshow/Slideshow.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/SkipForwardBackButtons/SkipForwardBackButtons.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/WarningMessage/WarningMessage.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/App/StepInfoStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/VideoPlayerStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/NameModal/NameModalStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/Slideshow/SlideshowStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/VideoPlayer/ProgressBarLabel.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/src/components/LinearProgressWithLabel/LinearProgressWithLabel.tsx",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":1,"column":25,"nodeType":"292","messageId":"293","endLine":1,"endColumn":34},{"ruleId":"294","severity":1,"message":"295","line":36,"column":6,"nodeType":"296","endLine":36,"endColumn":8,"suggestions":"297"},{"ruleId":"294","severity":1,"message":"298","line":120,"column":5,"nodeType":"296","endLine":120,"endColumn":86,"suggestions":"299"},{"ruleId":"290","severity":1,"message":"291","line":2,"column":49,"nodeType":"292","messageId":"293","endLine":2,"endColumn":58},{"ruleId":"294","severity":1,"message":"300","line":167,"column":25,"nodeType":"292","endLine":167,"endColumn":36,"suggestions":"301"},{"ruleId":"290","severity":1,"message":"302","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":15},{"ruleId":"290","severity":1,"message":"303","line":3,"column":17,"nodeType":"292","messageId":"293","endLine":3,"endColumn":22},{"ruleId":"290","severity":1,"message":"304","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":17},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'dismiss' and 'reset'. Either include them or remove the dependency array. If 'dismiss' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["307"],"React Hook useMemo has an unnecessary dependency: 'setProgressWithVideoUpdate'. Either exclude it or remove the dependency array.",["308"],"React Hook useCallback has a missing dependency: 'setChunks'. Either include it or remove the dependency array.",["309"],"'Chunk' is defined but never used.","'State' is defined but never used.","'ChunkCard' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [dismiss, reset]",{"range":"316","text":"317"},"Update the dependencies array to be: [progressBarValue, split, onProgressDrag, onScrobble]",{"range":"318","text":"319"},"Update the dependencies array to be: [setChunks]",{"range":"320","text":"321"},[813,815],"[dismiss, reset]",[3838,3919],"[progressBarValue, split, onProgressDrag, onScrobble]",[5405,5407],"[setChunks]"]