{"version":3,"sources":["components/VideoPlayer.js","components/chunk-list/ChunkItem.js","components/chunk-list/ChunkList.js","components/contrib-editor/ContribEditor.js","pages/edit/TranscribeEditor.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","position","paddingTop","width","height","video","top","left","bottom","right","zIndex","VideoPlayer","props","time","src","videoRef","React","useRef","classes","useEffect","seconds","timestamp","isNaN","match","Error","hours","parseInt","minutes","milliseconds","toMS","current","currentTime","Box","className","ref","controls","autoPlay","theme","createStyles","padding","spacing","margin","backgroundColor","focused","minWidth","cursor","ChunkItem","chunk","contribution","onClick","startTime","endTime","title","Card","CardHeader","titleTypographyProps","variant","CardContent","Typography","gutterBottom","text","display","flexDirection","overflow","ChunkList","user","chunks","activeIndex","onSelect","console","log","map","index","contribIndex","contributions","findIndex","key","chunkId","contribId","editor","ChunkEditor","contrib","useState","data","setData","subheader","TextField","label","multiline","rows","value","onChange","e","field","target","CardActions","Button","onCancel","onSubmit","color","box","maxHeight","TranscribeEditor","onUpdate","selection","setSelection","setStartTime","focus","setFocus","updateChunk","chunkData","Container","fixed","marginTop","Paper","Grid","container","item","xs","result","localeto","style","starttime","App","id","window","location","href","split","apiKey","transcriptionUri","updateRequestUri","fetch","then","response","json","transcription","catch","err","error","get","Fragment","CssBaseline","nextData","body","JSON","stringify","method","headers","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc03cf3d.chunk.js","sourcesContent":["import React from 'react';\nimport { Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root:{\n    position: 'relative',\n    paddingTop: '56.25%',\n    width: '100%',\n    height: 0,\n\n  },\n  video:{\n    position: 'absolute',\n    top:0,\n    left:0,\n    bottom:0,\n    right:0,\n    width: '100%',\n    height: '100%',\n    zIndex: 1,\n  },\n})\n\nexport default function VideoPlayer(props){\n  const {time, src} = props;\n  const videoRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(()=>{\n    const seconds = toMS(time)/1000;\n    if(seconds > 0){\n      videoRef.current.currentTime = seconds\n    }\n  }, [time]);\n\n\n  return (\n    <Box className={classes.root}>\n      <video className={classes.video} ref={videoRef} src={src} controls autoPlay={false}/>\n    </Box>\n  )\n}\n\n\nfunction toMS (timestamp) {\n  if (!isNaN(timestamp)) {\n    return timestamp\n  }\n\n  const match = timestamp.match(/^(?:(\\d{2,}):)?(\\d{2}):(\\d{2})[,.](\\d{3})$/)\n\n  if (!match) {\n    throw new Error('Invalid SRT or VTT time format: \"' + timestamp + '\"')\n  }\n\n  const hours = match[1] ? parseInt(match[1], 10) * 3600000 : 0\n  const minutes = parseInt(match[2], 10) * 60000\n  const seconds = parseInt(match[3], 10) * 1000\n  const milliseconds = parseInt(match[4], 10)\n\n  return hours + minutes + seconds + milliseconds\n}\n","import React from 'react';\nimport {Card, CardHeader, CardContent, Typography} from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme)=>createStyles({\n  root: (props)=>({\n    padding: theme.spacing(1),\n    margin: theme.spacing(0,1),\n    backgroundColor: props.focused ? \"#f0f0f0\" : '#FFF',\n    minWidth: 480,\n    cursor: \"pointer\",\n  }),\n}))\n\ntype ChunkItemProps = {\n  chunk: Chunk,\n  constribution: Object,\n  focused: boolean,\n  onClick: ()=>void,\n}\n\nexport default function ChunkItem(props : ChunkItemProps){\n  const { chunk, contribution, onClick } = props;\n  const classes = useStyles(props);\n  const {startTime, endTime} = chunk;\n  const title = `${startTime} - ${endTime}`\n  return (\n    <Card className={classes.root} onClick={onClick}>\n      <CardHeader\n        title={title}\n        titleTypographyProps={{variant: 'h6'}}/>\n      <CardContent>\n        <Typography gutterBottom>\n          {contribution && contribution.text}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport ChunkItem from './ChunkItem';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme)=>createStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflow: \"scroll\",\n    padding: theme.spacing(2,1),\n  }\n}))\n\nexport default function ChunkList(props){\n  const { user, chunks, activeIndex, onSelect } = props;\n  const classes = useStyles(props);\n  console.log(user);\n  console.log(chunks);\n  return (\n    <div className={classes.root}>\n      {chunks.map((chunk, index)=>{\n        const contributions = chunk.contributions || [];\n        const contribIndex = contributions.findIndex(contribution=>contribution.user === user);\n        const contribution = contribIndex < 0 ? null : chunk.contributions[contribIndex]\n        return (\n          <ChunkItem\n            key={index}\n            chunk={chunk}\n            focused={activeIndex === index}\n            contribution={contribution}\n            onClick={()=>onSelect({\n              chunkId: index,\n              contribId: contribIndex,\n              contribution\n            })}/>\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  CardActions} from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme)=>createStyles({\n  root:{\n    margin: theme.spacing(3,0),\n  },\n  editor:{\n    width: \"100%\",\n  }\n}));\n\nexport default function ChunkEditor(props){\n  const classes = useStyles();\n  const { title, chunk, contrib } = props;\n  const [data, setData] = React.useState(contrib);\n\n  const updateField = (field, value)=>{\n    setData({...data, [field]:value});\n  }\n\n  const handleSubmit = (e)=>{\n    props.onSubmit(data);\n  }\n\n  const handleCancel = (e)=>{\n    props.onCancel();\n  }\n\n  const {startTime, endTime} = chunk;\n  const subheader = `${startTime} - ${endTime}`\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={title}\n        titleTypographyProps={{variant: 'body1'}}\n        subheader={subheader}/>\n\n      <CardContent>\n        <TextField\n          className={classes.editor}\n          label=\"Subtitle\"\n          multiline\n          rows=\"2\"\n          value={data.text}\n          onChange={(e)=>updateField('text', e.target.value)}\n          variant=\"outlined\"/>\n      </CardContent>\n\n      <CardActions>\n        <Button\n          onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          color=\"primary\">\n          Submit\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from 'react';\nimport {Box, Container, Grid, Paper} from '@material-ui/core'\nimport VideoPlayer from 'components/VideoPlayer';\nimport ChunkList from 'components/chunk-list';\nimport ContribEditor from 'components/contrib-editor';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme: Theme)=>createStyles({\n  box:{\n    maxHeight: 600,\n    overflow: 'auto'\n  }\n}))\n\n\nexport default function TranscribeEditor(props){\n  const { src, user, chunks, onUpdate} = props;\n  const classes = useStyles();\n  const [ selection, setSelection ] = React.useState(null);\n  const [ startTime, setStartTime] = React.useState(0);\n  const [ focus, setFocus] = React.useState(null);\n\n  const handleSelect = (selection)=>{\n    const chunk = chunks[selection.chunkId];\n    setStartTime(chunk.starttime);\n    setFocus(selection.chunkId);\n    setSelection(selection);\n  }\n\n  const updateChunk = (chunkId, chunkData)=>{\n    onUpdate(chunks.map((chunk, index)=>(index === chunkId) ? {...chunk, ...chunkData} : chunk));\n  }\n\n  const handleCreateContrib = (contrib)=>{\n    const {chunkId} = selection;\n    const contributions = [...chunks[chunkId].contributions, contrib ];\n    updateChunk(chunkId, {contributions})\n    setSelection(null);\n  }\n\n  const handleUpdateContrib = (result)=>{\n    const {chunkId, contribId} = selection;\n    const contributions = chunks[chunkId].contributions.map((contribution,index)=>(index ===contribId ? result : contribution));\n    updateChunk(chunkId, {contributions})\n    setSelection(null);\n  }\n\n  return (\n    <Container fixed>\n      <Box marginTop={3}>\n        <Paper>\n          <Grid container spacing={4}>\n            <Grid item xs={3}/>\n            <Grid item xs={6}>\n              <Box className={classes.box}>\n                <VideoPlayer time={startTime} src={src} />\n              </Box>\n            </Grid>\n            <Grid item xs={3}/>\n          </Grid>\n        </Paper>\n      </Box>\n\n      {selection && selection.contribution && (\n        <Box marginTop={3}>\n          <ContribEditor\n            title=\"Edit Contribution\"\n            chunk={chunks[selection.chunkId]}\n            contrib={selection.contribution}\n            onCancel={()=>{setSelection(null)}}\n            onSubmit={handleUpdateContrib}/>\n        </Box>\n      )}\n\n      {selection && !selection.contribution && (\n        <Box marginTop={3}>\n          <ContribEditor\n            title=\"Add Contribution\"\n            chunk={chunks[selection.chunkId]}\n            contrib={{user, localeto:'en-AU'}}\n            onCancel={()=>{setSelection(null)}}\n            onSubmit={handleCreateContrib}/>\n        </Box>\n      )}\n\n      <Box marginTop={3} style={{display: selection ? 'none' : 'block'}}>\n        <ChunkList\n          user={user}\n          chunks={chunks}\n          activeIndex={focus}\n          onSelect={handleSelect}/>\n      </Box>\n\n    </Container>\n  )\n}\n","import React from 'react';\nimport get from 'lodash/get';\nimport TranscribeEditor from 'pages/edit';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nfunction App() {\n  // const id = \"123\";\n  // const apiKey = \"23123\";\n  const user = \"dave\";\n\n\n  const id = window.location.href.split('/')[5].split('?')[0];\n  const apiKey = window.location.href.split('apikey=')[1];\n\n  // const src = \"http://media.w3.org/2010/05/bunny/movie.mp4\";\n  const src = `/api/watch/getvideo/${id}`;\n\n  // const transcriptionUri = '/example.json';\n\n  \n\n  const transcriptionUri = `/api/watch/edit/${id}`;\n  const updateRequestUri = `/api/watch/savedit/${id}?apiKey=${apiKey}`;\n\n  const [ data, setData ] = React.useState({});\n\n  // load data\n  React.useEffect(()=>{\n    fetch(transcriptionUri)\n    .then((response)=>{\n      return response.json();\n    })\n    .then((result)=>{\n      console.log(result.transcription);\n      setData(result.transcription);\n    })\n    .catch((err)=>{\n      console.error(err);\n    })\n  },[]);\n\n  // update data\n  const handleUpdate = (chunks)=>{\n    const nextData = {...data, chunks}\n    setData(nextData);\n\n    const body = JSON.stringify({data: nextData});\n    console.log(body)\n    fetch(updateRequestUri, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: body,\n    })\n    .then((response)=>{\n      return response;\n    })\n    .catch((err)=>{\n      console.error(err);\n    })\n  }\n\n  const chunks = get(data, ['chunks'], []);\n  return (\n    <React.Fragment>\n      <CssBaseline/>\n      <TranscribeEditor\n        chunks={chunks}\n        onUpdate={handleUpdate}\n        src={src}\n        user={user}/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}