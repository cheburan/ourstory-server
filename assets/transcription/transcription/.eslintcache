[{"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/index.tsx":"1","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/App.tsx":"2","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/reportWebVitals.ts":"3","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/VideoPlayer.tsx":"4","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/VideoPlayerStyles.ts":"5","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/Hooks/useFadeControls.ts":"6","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useToggle.ts":"7","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkEditor.tsx":"8","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Header/Header.tsx":"9","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Header/HeaderStyles.ts":"10","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Transcriber/Transcriber.tsx":"11","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/hooks/useSteps.ts":"12","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/hooks/useOurstoryApi.ts":"13","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/getId.ts":"14","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Dashboard/DashboardStyles.ts":"15","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/oneSatisfies.ts":"16","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useSlideshow.ts":"17","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerProps.ts":"18","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Reviewer/Reviewer.tsx":"19","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/Views.ts":"20","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Dashboard/Dashboard.tsx":"21","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/chunkManipulation.ts":"22","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/adjacentMap.ts":"23","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/ChunksContext/chunksActions.ts":"24","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/ChunksContext/chunksContext.tsx":"25","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Transcriber/TranscriberStyles.ts":"26","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Slideshow/Slideshow.tsx":"27","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkEditorStyles.ts":"28","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleCard/SimpleCard.tsx":"29","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/NameModal/NameModal.tsx":"30","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleInputForm/SimpleInputForm.tsx":"31","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/UserProvider/UserProvider.tsx":"32","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useLocalStorage.ts":"33","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleCard/ChunkCard.tsx":"34","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/StepInfo.tsx":"35","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaButton/IndabaButton.tsx":"36","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/getApiKey.ts":"37","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/NameModal/NameModalStyles.ts":"38","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useDefaultState.ts":"39","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/CentralModal/CentralModal.tsx":"40","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/FlatPaper/FlatPaper.tsx":"41","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ContributersModal/ContributersModal.tsx":"42","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaMenu/IndabaMenu.tsx":"43","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Slideshow/SlideshowStyles.ts":"44","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/ProgressBarLabel.tsx":"45","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaSlider/IndabaSlider.tsx":"46","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkCropper.tsx":"47","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/EditChunkModal/EditChunkModal.tsx":"48","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/VideoThumbnail.tsx":"49","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/WarningMessage/WarningMessage.tsx":"50","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/BackButton/BackButton.tsx":"51","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useConfirmBeforeAction.ts":"52","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleCard/EditTranscriptionCard.tsx":"53","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useWatchForNewElements.ts":"54","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ConfirmIntentModal/ConfirmIntentModal.tsx":"55","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SkipForwardBackButtons/SkipForwardBackButtons.tsx":"56","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/TranscriptionsModal/TranscriptionsModal.tsx":"57","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkCardContextMenu.tsx":"58","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ScrollToOnMount/ScrollToOnMount.tsx":"59","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerController.ts":"60","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/localStorageKeys.ts":"61","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useFirstRender.ts":"62","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/StepInfoStyles.ts":"63","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/LinearProgressWithLabel/LinearProgressWithLabel.tsx":"64","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaLink/IndabaLink.tsx":"65","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/OnboardingModal/OnboardingModal.tsx":"66","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Transcriber/hooks/useTranscriberState.ts":"67","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/OnboardingModal/OnboardingModalStyles.ts":"68"},{"size":515,"mtime":1607475143920,"results":"69","hashOfConfig":"70"},{"size":5745,"mtime":1613439726415,"results":"71","hashOfConfig":"70"},{"size":425,"mtime":1607421889321,"results":"72","hashOfConfig":"70"},{"size":6692,"mtime":1613088863000,"results":"73","hashOfConfig":"70"},{"size":1153,"mtime":1612404894898,"results":"74","hashOfConfig":"70"},{"size":1435,"mtime":1608611003708,"results":"75","hashOfConfig":"70"},{"size":347,"mtime":1608786967642,"results":"76","hashOfConfig":"70"},{"size":12231,"mtime":1613090083141,"results":"77","hashOfConfig":"70"},{"size":2187,"mtime":1613011494642,"results":"78","hashOfConfig":"70"},{"size":872,"mtime":1610578086063,"results":"79","hashOfConfig":"70"},{"size":9599,"mtime":1613429027708,"results":"80","hashOfConfig":"70"},{"size":1188,"mtime":1610601896159,"results":"81","hashOfConfig":"70"},{"size":2820,"mtime":1613440150963,"results":"82","hashOfConfig":"70"},{"size":259,"mtime":1613441525850,"results":"83","hashOfConfig":"70"},{"size":243,"mtime":1610495448868,"results":"84","hashOfConfig":"70"},{"size":378,"mtime":1608619025331,"results":"85","hashOfConfig":"70"},{"size":995,"mtime":1613089675005,"results":"86","hashOfConfig":"70"},{"size":4751,"mtime":1613430593490,"results":"87","hashOfConfig":"70"},{"size":11671,"mtime":1613091140174,"results":"88","hashOfConfig":"70"},{"size":91,"mtime":1608337617033,"results":"89","hashOfConfig":"70"},{"size":2239,"mtime":1613085976977,"results":"90","hashOfConfig":"70"},{"size":6939,"mtime":1613008371920,"results":"91","hashOfConfig":"70"},{"size":462,"mtime":1609980016612,"results":"92","hashOfConfig":"70"},{"size":12577,"mtime":1613088852692,"results":"93","hashOfConfig":"70"},{"size":850,"mtime":1613013135455,"results":"94","hashOfConfig":"70"},{"size":729,"mtime":1613083378573,"results":"95","hashOfConfig":"70"},{"size":2037,"mtime":1613089298245,"results":"96","hashOfConfig":"70"},{"size":694,"mtime":1613020677430,"results":"97","hashOfConfig":"70"},{"size":882,"mtime":1613014185120,"results":"98","hashOfConfig":"70"},{"size":902,"mtime":1612826433705,"results":"99","hashOfConfig":"70"},{"size":1166,"mtime":1611200894648,"results":"100","hashOfConfig":"70"},{"size":1061,"mtime":1613441529459,"results":"101","hashOfConfig":"70"},{"size":1370,"mtime":1612915859778,"results":"102","hashOfConfig":"70"},{"size":1478,"mtime":1613014117521,"results":"103","hashOfConfig":"70"},{"size":1334,"mtime":1610601873927,"results":"104","hashOfConfig":"70"},{"size":977,"mtime":1612404177529,"results":"105","hashOfConfig":"70"},{"size":199,"mtime":1613020073311,"results":"106","hashOfConfig":"70"},{"size":432,"mtime":1610406269709,"results":"107","hashOfConfig":"70"},{"size":351,"mtime":1612394267533,"results":"108","hashOfConfig":"70"},{"size":1776,"mtime":1612834241831,"results":"109","hashOfConfig":"70"},{"size":388,"mtime":1610584474397,"results":"110","hashOfConfig":"70"},{"size":4447,"mtime":1613088728724,"results":"111","hashOfConfig":"70"},{"size":567,"mtime":1613015577328,"results":"112","hashOfConfig":"70"},{"size":316,"mtime":1612405729482,"results":"113","hashOfConfig":"70"},{"size":294,"mtime":1610596943513,"results":"114","hashOfConfig":"70"},{"size":1107,"mtime":1612228437935,"results":"115","hashOfConfig":"70"},{"size":3466,"mtime":1612845988962,"results":"116","hashOfConfig":"70"},{"size":1766,"mtime":1613013144811,"results":"117","hashOfConfig":"70"},{"size":1200,"mtime":1613009783375,"results":"118","hashOfConfig":"70"},{"size":479,"mtime":1611707663299,"results":"119","hashOfConfig":"70"},{"size":624,"mtime":1612411092493,"results":"120","hashOfConfig":"70"},{"size":2118,"mtime":1611705728391,"results":"121","hashOfConfig":"70"},{"size":1015,"mtime":1613014330363,"results":"122","hashOfConfig":"70"},{"size":720,"mtime":1611707888217,"results":"123","hashOfConfig":"70"},{"size":1642,"mtime":1611710451004,"results":"124","hashOfConfig":"70"},{"size":925,"mtime":1611805328030,"results":"125","hashOfConfig":"70"},{"size":1177,"mtime":1613085638277,"results":"126","hashOfConfig":"70"},{"size":1234,"mtime":1613013190565,"results":"127","hashOfConfig":"70"},{"size":408,"mtime":1611794380284,"results":"128","hashOfConfig":"70"},{"size":3197,"mtime":1612845391656,"results":"129","hashOfConfig":"70"},{"size":33,"mtime":1608102697344,"results":"130","hashOfConfig":"70"},{"size":239,"mtime":1611206911866,"results":"131","hashOfConfig":"70"},{"size":530,"mtime":1608099219859,"results":"132","hashOfConfig":"70"},{"size":677,"mtime":1608074628548,"results":"133","hashOfConfig":"70"},{"size":419,"mtime":1611096888228,"results":"134","hashOfConfig":"70"},{"size":2266,"mtime":1613020269344,"results":"135","hashOfConfig":"70"},{"size":6497,"mtime":1613088548090,"results":"136","hashOfConfig":"70"},{"size":517,"mtime":1613020267411,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"157xvx",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/index.tsx",[],["283","284"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/App.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/reportWebVitals.ts",[],["285","286"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/VideoPlayer.tsx",[],["287","288"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/VideoPlayerStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/Hooks/useFadeControls.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useToggle.ts",[],["289","290"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkEditor.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Header/Header.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Header/HeaderStyles.ts",[],["291","292"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Transcriber/Transcriber.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/hooks/useSteps.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/hooks/useOurstoryApi.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/getId.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Dashboard/DashboardStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/oneSatisfies.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useSlideshow.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerProps.ts",["293"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Reviewer/Reviewer.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/Views.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Dashboard/Dashboard.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/chunkManipulation.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/adjacentMap.ts",[],["294","295"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/ChunksContext/chunksActions.ts",["296"],"// External Dependencies\nimport { useCallback } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Internal Dependencies\nimport adjacentMap from \"../adjacentMap\";\nimport {\n  getAdjacentChunks,\n  getEnclosingChunk,\n  getLastEndTimeSeconds,\n  getLastEndTimeStamp,\n  invalidSplit,\n  toTimeStamp,\n} from \"../chunkManipulation\";\nimport oneSatisfies from \"../oneSatisfies\";\nimport { Chunk, Transcription } from \"../types\";\nimport chunksContext from \"./chunksContext\";\n\n/**\n * Using the ChunksContext, get a function for deleting chunks\n */\nexport const useDeleteChunk = () => {\n  const [, setChunks] = chunksContext.useChunksState();\n\n  /**\n   * Delete a chunk from the chunks in the ChunksContext\n   *\n   * @param toDelete - the chunk to delete\n   */\n  return (toDelete: Chunk) =>\n    setChunks((chunks) =>\n      /*\n      This call to adjacentMap is checking if, after deleting the chunk, there\n      is a gap in the chunks. If so, we need to create a new chunk that closes\n      the gap\n\n      At a high level:\n      If we have chunks A B C D, and we delete chunk B we now have a gap\n      between chunks A and C. To fix this, we need to create a new chunk\n      that has the same start time as A and the same end time as C,\n      so we end up with: E D, where E is a new chunk that we create in this\n      call to adjacentMap\n      */\n      adjacentMap(\n        chunks.filter((c) => c.id !== toDelete.id),\n        (a: Chunk, b: Chunk) => {\n          if (a.endtimeseconds !== b.starttimeseconds) {\n            return {\n              ...b,\n              starttimeseconds: a.endtimeseconds,\n              starttimestamp: a.endtimestamp,\n              id: uuidv4(),\n              updatedat: new Date(),\n              transcriptions: [],\n            };\n          }\n          return b;\n        }\n      )\n        .concat(\n          ((first) =>\n            first\n              ? first.starttimeseconds === 0\n                ? [first]\n                : [\n                    {\n                      ...first,\n                      starttimeseconds: 0,\n                      starttimestamp: \"00:00:00:00\",\n                      id: uuidv4(),\n                      updatedat: new Date(),\n                      transcriptions: [],\n                    },\n                  ]\n              : [])(chunks.filter((c) => c.id !== toDelete.id)[0])\n        )\n        .sort((a, b) => a.endtimeseconds - b.endtimeseconds)\n    );\n};\n\n/**\n * Using the ChunksContext, get a function for creating new chunks\n */\nexport const useNewChunk = () => {\n  const [chunks, setChunks] = chunksContext.useChunksState();\n\n  /**\n   * This function creates a new chunk in the video.\n   * Invalid chunks are defined by the invalidSplit function and will not be created\n   *\n   * @param splitAt - the point in the video (as a fraction) where the new chunk should end\n   * @param storyDuration - the length of the video being chunked\n   * @param userName - the name of the user doing the chunking\n   */\n  return (splitAt: number, storyDuration: number, userName: string) => {\n    if (invalidSplit(chunks, splitAt, storyDuration)) {\n      return;\n    }\n    const enclosingChunk = getEnclosingChunk(chunks, splitAt);\n    if (enclosingChunk !== undefined) {\n      setChunks((chunks) => {\n        const newChunks = chunks\n          .filter((c) => c.id !== enclosingChunk.id)\n          .concat([\n            {\n              starttimestamp: enclosingChunk.starttimestamp,\n              starttimeseconds: enclosingChunk.starttimeseconds,\n              endtimestamp: toTimeStamp(splitAt * storyDuration),\n              endtimeseconds: splitAt,\n              creatorid: userName,\n              updatedat: new Date(),\n              id: uuidv4(),\n              transcriptions: [],\n            },\n            {\n              starttimestamp: toTimeStamp(splitAt * storyDuration),\n              starttimeseconds: splitAt,\n              endtimestamp: enclosingChunk.endtimestamp,\n              endtimeseconds: enclosingChunk.endtimeseconds,\n              creatorid: userName,\n              updatedat: new Date(),\n              id: uuidv4(),\n              transcriptions: [],\n            },\n          ])\n          .sort((a, b) => a.endtimeseconds - b.endtimeseconds);\n        return newChunks;\n      });\n    } else {\n      setChunks((chunks) => {\n\n        const newChunks = chunks.concat([\n          {\n            starttimestamp: getLastEndTimeStamp(chunks),\n            endtimestamp: toTimeStamp(splitAt * storyDuration),\n            starttimeseconds: getLastEndTimeSeconds(chunks),\n            endtimeseconds: splitAt,\n            creatorid: userName,\n            updatedat: new Date(),\n            id: uuidv4(),\n            transcriptions: [],\n          },\n        ]);\n\n\n        return newChunks;\n      });\n    }\n  };\n};\n\nconst removeReview = (chunk: Chunk) => ({ ...chunk, review: undefined });\n\nconst getTranscriptionByCreator = (chunk: Chunk, userName: string) =>\n  chunk.transcriptions.filter(\n    (transcription) => transcription.creatorid === userName\n  )[0];\n\n/**\n * Using the ChunksContext, get a function for updating a chunks transcription\n * list\n */\nexport const useUpdateTranscription = (): ((toUpdate: Chunk, updatedTranscription: string, userName: string) => void) => {\n  const [, setChunks] = chunksContext.useChunksState();\n\n  const setChunksMemo = useCallback(setChunks, []);\n\n  const updateFunction = useCallback(\n    (toUpdate: Chunk, updatedTranscription: string, userName: string) => {\n      setChunksMemo((chunks) => {\n        const newChunks = chunks.map((chunk) =>\n          chunk.id === toUpdate.id\n            ? {\n                ...(chunk.review?.selectedtranscription ===\n                  getTranscriptionByCreator(chunk, userName)?.id &&\n                updatedTranscription === \"\"\n                  ? removeReview(chunk)\n                  : chunk),\n                /* This call to oneSatisfies checks if the current user has\n                 * already made a transcription for this chunk (in that case,\n                 * update that chunk instead of creating a new one)\n                 */\n                transcriptions: oneSatisfies(\n                  chunk.transcriptions,\n                  (t) => t.creatorid === userName\n                )\n                  ? /* The ternary here is to delete a transcription if a user has a transcription but is now transcribing an empty string */\n                    updatedTranscription === \"\"\n                    ? chunk.transcriptions.filter(\n                        (t) => t.creatorid !== userName\n                      )\n                    : chunk.transcriptions.map((t) =>\n                        t.creatorid === userName\n                          ? { ...t, content: updatedTranscription }\n                          : t\n                      )\n                  : /* The ternary here is to avoid adding empty transcriptions */\n                    chunk.transcriptions.concat(\n                      updatedTranscription === \"\"\n                        ? []\n                        : [\n                            {\n                              creatorid: userName,\n                              content: updatedTranscription,\n                              id: uuidv4(),\n                              updatedat: new Date(),\n                            },\n                          ]\n                    ),\n              }\n            : chunk\n        );\n        return newChunks;\n      });\n    },\n    [setChunksMemo]\n  );\n\n  return updateFunction;\n};\n\n/**\n * Using the ChunksContext, get a function for updating the Review of a Chunk\n */\nexport const useUpdateReview = () => {\n  const [, setChunks] = chunksContext.useChunksState();\n\n  return (\n    toUpdate: Chunk,\n    selectedTranscription: Transcription,\n    userName: string\n  ) => {\n    setChunks((chunks) =>\n      chunks.map((chunk) =>\n        chunk.id === toUpdate.id\n          ? /*\n             * This call to oneSatisfies simply checks if the\n             * selectedTranscription exists on the Chunk\n             * (if it doesn't, don't update the chunk)\n             */\n            oneSatisfies(\n              chunk.transcriptions,\n              (a) => a.id === selectedTranscription.id\n            )\n            ? {\n                ...chunk,\n                review: {\n                  reviewedat: new Date(),\n                  selectedtranscription: selectedTranscription.id,\n                  reviewedby: userName,\n                },\n              }\n            : chunk\n          : chunk\n      )\n    );\n  };\n};\n\n/**\n * Using the ChunksContext, get a function for deleting the Review of a Chunk\n */\nexport const useDeleteReview = () => {\n  const [, setChunks] = chunksContext.useChunksState();\n\n  return (toDelete: Chunk) => {\n    setChunks((chunks) =>\n      chunks.map((chunk) =>\n        chunk.id === toDelete.id ? { ...chunk, review: undefined } : chunk\n      )\n    );\n  };\n};\n\nconst renameChunk = (newName: string, chunk: Chunk): Chunk =>\n  newName !== \"\" ? { ...chunk, name: newName } : { ...chunk, name: undefined };\n\nconst deleteNegativeChunks = (chunks: Chunk[]): Chunk[] =>\n  chunks.filter((chunk) => chunk.endtimeseconds > chunk.starttimeseconds);\n\n/**\n * Hook for getting a function for cropping a chunk\n *\n * This involves modifying the start and end times\n * of the cropped chunk as well as the chunks on either\n * side of the chunk.\n *\n * The user may also, optionally, rename the chunk using\n * this action\n */\nexport const useCropChunk = () => {\n  const [, setChunks] = chunksContext.useChunksState();\n\n  return (\n    toUpdate: Chunk,\n    storyDuration: number,\n    newSplit: [number, number],\n    userName: string,\n    newName?: string\n  ) => {\n    setChunks((chunks) => {\n      const neighbouringChunks = getAdjacentChunks(toUpdate, chunks);\n      return deleteNegativeChunks(\n        chunks\n          .map((chunk) =>\n            chunk.id === toUpdate.id\n              ? {\n                  ...(newName ? renameChunk(newName, chunk) : { ...chunk, name: undefined }),\n                  starttimeseconds: newSplit[0],\n                  starttimestamp: toTimeStamp(newSplit[0] * storyDuration),\n                  endtimeseconds: newSplit[1],\n                  endtimestamp: toTimeStamp(newSplit[1] * storyDuration),\n                  updatedat: new Date(),\n                }\n              : chunk.id === neighbouringChunks.next?.id\n              ? {\n                  ...chunk,\n                  starttimeseconds: newSplit[1],\n                  starttimestamp: toTimeStamp(newSplit[1] * storyDuration),\n                  updatedat: new Date(),\n                }\n              : chunk.id === neighbouringChunks.prev?.id\n              ? {\n                  ...chunk,\n                  endtimeseconds: newSplit[0],\n                  endtimestamp: toTimeStamp(newSplit[0] * storyDuration),\n                  updatedat: new Date(),\n                }\n              : chunk\n          )\n          /*\n           * This is the case where the chunk the user is editing is the first\n           * chunk, and they are editing it so that it doesn't start at the very\n           * start. In this case, we need a new chunk to cover this gap\n           */\n          .concat(\n            !neighbouringChunks.prev && newSplit[0] !== 0\n              ? [\n                  {\n                    starttimestamp: toTimeStamp(0),\n                    starttimeseconds: 0,\n                    endtimestamp: toTimeStamp(newSplit[0] * storyDuration),\n                    endtimeseconds: newSplit[0],\n                    creatorid: userName,\n                    updatedat: new Date(),\n                    id: uuidv4(),\n                    transcriptions: [],\n                  },\n                ]\n              : []\n          )\n      ).sort((a, b) => a.endtimeseconds - b.endtimeseconds);\n    });\n  };\n};\n\n/**\n * Hook to get a function for renaming chunks\n *\n * If the newName parameter is an empty string, the name\n * will be set to undefined\n */\nexport const useRenameChunk = () => {\n  const [, setChunks] = chunksContext.useChunksState();\n\n  return (toUpdate: Chunk, newName: string) => {\n    setChunks((chunks) =>\n      chunks.map((chunk) =>\n        chunk.id === toUpdate.id ? renameChunk(newName, chunk) : chunk\n      )\n    );\n  };\n};\n\n/**\n * Hook to get a function that accepts a function\n * and calls that function with the latest chunks\n * according to the server\n */\nexport const useDoWithChunks = () => {\n  const [, setChunks] = chunksContext.useChunksState();\n\n  return (doWith: (chunks: Chunk[]) => void) => {\n    setChunks((chunks) => {\n      doWith(chunks);\n      return chunks;\n    });\n  };\n};\n","/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/ChunksContext/chunksContext.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Transcriber/TranscriberStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Slideshow/Slideshow.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkEditorStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleCard/SimpleCard.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/NameModal/NameModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleInputForm/SimpleInputForm.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/UserProvider/UserProvider.tsx",["297"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useLocalStorage.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleCard/ChunkCard.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/StepInfo.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaButton/IndabaButton.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/getApiKey.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/NameModal/NameModalStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useDefaultState.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/CentralModal/CentralModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/FlatPaper/FlatPaper.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ContributersModal/ContributersModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaMenu/IndabaMenu.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Slideshow/SlideshowStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/ProgressBarLabel.tsx",[],["298","299"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaSlider/IndabaSlider.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkCropper.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/EditChunkModal/EditChunkModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/VideoThumbnail.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/WarningMessage/WarningMessage.tsx",[],["300","301"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/BackButton/BackButton.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useConfirmBeforeAction.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SimpleCard/EditTranscriptionCard.tsx",["302","303","304"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useWatchForNewElements.ts",["305","306"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ConfirmIntentModal/ConfirmIntentModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/SkipForwardBackButtons/SkipForwardBackButtons.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/TranscriptionsModal/TranscriptionsModal.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ChunkEditor/ChunkCardContextMenu.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/ScrollToOnMount/ScrollToOnMount.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/VideoPlayer/Hooks/useVideoPlayerController.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/utils/localStorageKeys.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/hooks/useFirstRender.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/App/StepInfoStyles.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/LinearProgressWithLabel/LinearProgressWithLabel.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/IndabaLink/IndabaLink.tsx",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/OnboardingModal/OnboardingModal.tsx",["307"],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/Transcriber/hooks/useTranscriberState.ts",[],"/Users/harrisonmarshall/dev/ourstory-server/assets/transcription/transcription/src/components/OnboardingModal/OnboardingModalStyles.ts",[],{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"308","replacedBy":"312"},{"ruleId":"310","replacedBy":"313"},{"ruleId":"308","replacedBy":"314"},{"ruleId":"310","replacedBy":"315"},{"ruleId":"308","replacedBy":"316"},{"ruleId":"310","replacedBy":"317"},{"ruleId":"308","replacedBy":"318"},{"ruleId":"310","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":120,"column":5,"nodeType":"322","endLine":120,"endColumn":86,"suggestions":"323"},{"ruleId":"308","replacedBy":"324"},{"ruleId":"310","replacedBy":"325"},{"ruleId":"320","severity":1,"message":"326","line":166,"column":25,"nodeType":"327","endLine":166,"endColumn":36,"suggestions":"328"},{"ruleId":"320","severity":1,"message":"329","line":36,"column":6,"nodeType":"322","endLine":36,"endColumn":16,"suggestions":"330"},{"ruleId":"308","replacedBy":"331"},{"ruleId":"310","replacedBy":"332"},{"ruleId":"308","replacedBy":"333"},{"ruleId":"310","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":3,"column":10,"nodeType":"327","messageId":"337","endLine":3,"endColumn":15},{"ruleId":"335","severity":1,"message":"338","line":3,"column":17,"nodeType":"327","messageId":"337","endLine":3,"endColumn":22},{"ruleId":"335","severity":1,"message":"339","line":4,"column":8,"nodeType":"327","messageId":"337","endLine":4,"endColumn":17},{"ruleId":"320","severity":1,"message":"340","line":18,"column":6,"nodeType":"322","endLine":18,"endColumn":8,"suggestions":"341"},{"ruleId":"320","severity":1,"message":"342","line":26,"column":6,"nodeType":"322","endLine":26,"endColumn":16,"suggestions":"343"},{"ruleId":"320","severity":1,"message":"344","line":36,"column":6,"nodeType":"322","endLine":36,"endColumn":8,"suggestions":"345"},"no-native-reassign",["346"],"no-negated-in-lhs",["347"],["346"],["347"],["346"],["347"],["346"],["347"],["346"],["347"],"react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'setProgressWithVideoUpdate'. Either exclude it or remove the dependency array.","ArrayExpression",["348"],["346"],["347"],"React Hook useCallback has a missing dependency: 'setChunks'. Either include it or remove the dependency array.","Identifier",["349"],"React Hook useEffect has a missing dependency: 'setName'. Either include it or remove the dependency array.",["350"],["346"],["347"],["346"],["347"],"@typescript-eslint/no-unused-vars","'Chunk' is defined but never used.","unusedVar","'State' is defined but never used.","'ChunkCard' is defined but never used.","React Hook useEffect has a missing dependency: 'elements'. Either include it or remove the dependency array. If 'setPrevElements' needs the current value of 'elements', you can also switch to useReducer instead of useState and read 'elements' in the reducer.",["351"],"React Hook useEffect has missing dependencies: 'action', 'identifier', and 'prevElements'. Either include them or remove the dependency array. If 'action' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["352"],"React Hook useCallback has missing dependencies: 'dismiss' and 'reset'. Either include them or remove the dependency array. If 'dismiss' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["353"],"no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},"Update the dependencies array to be: [progressBarValue, split, onProgressDrag, onScrobble]",{"range":"366","text":"367"},"Update the dependencies array to be: [setChunks]",{"range":"368","text":"369"},"Update the dependencies array to be: [setName, userName]",{"range":"370","text":"371"},"Update the dependencies array to be: [elements]",{"range":"372","text":"373"},"Update the dependencies array to be: [action, elements, identifier, prevElements]",{"range":"374","text":"375"},"Update the dependencies array to be: [dismiss, reset]",{"range":"376","text":"377"},[3838,3919],"[progressBarValue, split, onProgressDrag, onScrobble]",[5334,5336],"[setChunks]",[934,944],"[setName, userName]",[461,463],"[elements]",[665,675],"[action, elements, identifier, prevElements]",[813,815],"[dismiss, reset]"]